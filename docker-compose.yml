version: "3.5"

services:
  postgres:
    container_name: eosrate_postgres
    image: postgres:10.4
    volumes:
      - eosrate-postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      DB_NAME: eosrate
      DB_USER: user
      DB_PASSWORD: pass
      POSTGRES_DB: eosrate

  pgweb:
    container_name: eosrate_pgweb
    image: sosedoff/pgweb:latest
    restart: always
    ports:
      - "8082:8081"
    environment:
      DATABASE_URL: postgres://user:pass@postgres:5432/eosrate?sslmode=disable
    depends_on:
      - postgres
  
  hapi:
    container_name: eosrate_hapi
    build:
      context: ./services/hapi
      dockerfile: Dockerfile
    volumes:
      - ./services/hapi:/opt/application  
      - /opt/application/node_modules # prevents host/container conflicts
    ports:
      - '3005:3005'
    environment:
      VIRTUAL_HOST: 0.0.0.0
      VIRTUAL_PORT: 3005
      DB_USER: user
      DB_PASSWORD: pass
      DB_PORT: 5432
      DB_NAME: eosrate
      DB_HOST: postgres
      DB_SCHEMA: public
      EOS_API_ENDPOINT: "https://jungle.eosio.cr"

    depends_on:
     - postgres

  demux:
    container_name: eosrate_demux
    build:
      context: ./services/demux
      dockerfile: ./Dockerfile
    image: eosrate/demux
    volumes:
      - ./services/demux:/opt/application # mount demux service folder
      - /opt/application/node_modules # prevents host/container conflicts
    depends_on:
      - postgres
      - hasura
    environment:
      DB_USER: user
      DB_PASSWORD: pass
      DB_PORT: 5432
      DB_NAME: eosrate
      DB_HOST: postgres
      DB_SCHEMA: public
      EOS_API_ENDPOINT: "https://jungle.eosio.cr"
      WAIT_HOSTS: postgres:5432, hasura:8080
      WAIT_HOSTS_TIMEOUT: 60
    ports:
      - "3030:3030"
    networks:
      default:

  hasura:
    container_name: eosrate_hasura
    image: hasura/graphql-engine:v1.2.0-beta.1.cli-migrations
    ports:
      - "8088:8080"
    depends_on:
      - postgres
    restart: always
    environment:
      HASURA_ADMIN_SECRET:
      HASURA_GRAPHQL_DATABASE_URL: postgres://user:pass@postgres:5432/eosrate?sslmode=disable
      HASURA_GRAPHQL_MIGRATIONS_DIR: /hasura-migrations
    volumes:
      - ./services/hasura/migrations:/hasura-migrations #  mount hasura migrations folder
    command:
      - graphql-engine
      - serve
      - --enable-console

volumes:
  eosrate-postgres:

networks:
  default:
