version: "3.6"

services:
  postgres:
    container_name: eosrate_postgres
    image: postgres:13.3-alpine
    volumes:
      - ${POSTGRES_DATA}:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"

  pgweb:
    container_name: eosrate_pgweb
    image: sosedoff/pgweb:latest
    restart: always
    ports:
      - "8082:8081"
    environment:
      DATABASE_URL: "${HASURA_GRAPHQL_DATABASE_URL}?sslmode=disable"
    depends_on:
      - postgres

  hapi:
    container_name: eosrate_hapi
    build:
      context: ./hapi
      dockerfile: Dockerfile
    volumes:
      - ./hapi:/opt/application
      - /opt/application/node_modules
    ports:
      - "9090:9090"
    environment:
      HAPI_SERVER_ADDRESS: "${HAPI_SERVER_ADDRESS}"
      HAPI_SERVER_PORT: "${HAPI_SERVER_PORT}"
      HAPI_POSTGRES_USER: "${POSTGRES_USER}"
      HAPI_POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      HAPI_POSTGRES_PORT: "${POSTGRES_PORT}"
      HAPI_POSTGRES_DB: "${POSTGRES_DB}"
      HAPI_POSTGRES_HOST: "${POSTGRES_HOST}"
      HAPI_POSTGRES_SCHEMA: "${POSTGRES_SCHEMA}"
      HAPI_EOS_API_ENDPOINT: "${HAPI_EOS_API_ENDPOINT}"

    depends_on:
      - postgres

  demux:
    container_name: eosrate_demux
    build:
      context: ./demux
      dockerfile: ./Dockerfile
    image: eosrate/demux
    volumes:
      - ./demux:/opt/application
      - /opt/application/node_modules
    depends_on:
      - postgres
      - hasura
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_PORT: "${POSTGRES_PORT}"
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_HOST: "${POSTGRES_HOST}"
      POSTGRES_SCHEMA: "${POSTGRES_SCHEMA}"
      HAPI_EOS_API_ENDPOINT: "${HAPI_EOS_API_ENDPOINT}"
      WAIT_HOSTS: postgres:"${POSTGRES_PORT}", hasura:8080
      WAIT_HOSTS_TIMEOUT: 60
    ports:
      - "3030:3030"
    networks:
      default:

  hasura:
    container_name: eosrate_hasura
    image: hasura/graphql-engine:v2.0.3
    ports:
    - "8080:8080"
    depends_on:
    - "postgres"
    restart: always
    environment:
      HASURA_GRAPHQL_DATABASE_URL: "${HASURA_GRAPHQL_DATABASE_URL}"
      HASURA_GRAPHQL_MIGRATIONS_DIR: /hasura-migrations
      HASURA_GRAPHQL_METADATA_DIR: /hasura-metadata
      HASURA_GRAPHQL_ACTION_BASE_URL: "${HASURA_GRAPHQL_ACTION_BASE_URL}"
      HASURA_GRAPHQL_ADMIN_SECRET: "${HASURA_GRAPHQL_ADMIN_SECRET}"
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: "${HASURA_GRAPHQL_UNAUTHORIZED_ROLE}"
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log

    volumes:
      - ./hasura/migrations:/hasura-migrations
      - ./hasura/metadata:/hasura-metadata

  webapp:
    container_name: eosrate_webapp
    build:
      context: ./webapp
      dockerfile: ./Dockerfile
      target: server
    image: eosrate/webapp
    depends_on:
      - hasura
      - hapi
    ports:
      - "80:80"
    environment:
      WEBAPP_GRAPHQL_HTTP_URL: "${WEBAPP_GRAPHQL_HTTP_URL}"
      WEBAPP_GRAPHQL_WS_URL: "${WEBAPP_GRAPHQL_WS_URL}"
      WEBAPP_EOS_API_URL: "${WEBAPP_EOS_API_URL}"
      WEBAPP_EOS_API_HOST: "${WEBAPP_EOS_API_HOST}"
      WEBAPP_EOS_API_PORT: "${WEBAPP_EOS_API_PORT}"
      WEBAPP_EOS_API_PROTOCOL: "${WEBAPP_EOS_API_PROTOCOL}"
      WEBAPP_EOS_CHAIN_ID: "${WEBAPP_EOS_CHAIN_ID}"
      WEBAPP_BLOCK_EXPLORER: "${WEBAPP_BLOCK_EXPLORER}"
      WEBAPP_NETWORK_MONITOR_URL: "${WEBAPP_NETWORK_MONITOR_URL}"
    networks:
      default:
